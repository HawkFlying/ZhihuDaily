apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'
apply plugin: 'com.fernandocejas.frodo'

android {
    def cfg = rootProject.ext.androidVersionConfig

    compileSdkVersion cfg.androidCompileSdkVersion
    buildToolsVersion cfg.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion cfg.androidMinSdkVersion
        targetSdkVersion cfg.androidTargetSdkVersion
        versionCode cfg.versionCode as int
        versionName cfg.versionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility as JavaVersion
        targetCompatibility rootProject.ext.javaTargetCompatibility as JavaVersion
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }
}

frodo {
    enabled = true
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':tsnackbar')
    compile project(':stickyHeaderRecyclerView')

    def support = rootProject.ext.support
    def rx = rootProject.ext.rx;
    def majorFrame = rootProject.ext.majorFrame

    compile support.appcompat as String
    compile support.design as String
    compile support.recyclerView as String
    compile support.cardView as String

    compile rx.rxJava as String
    compile rx.rxAndroid as String
    compile rx.rxLifecycle as String
    compile rx.rxLlifecycleComponents as String
    compile rx.rxBinding as String

    compile majorFrame.okHttp as String
    compile majorFrame.loggingInterceptor as String

    compile majorFrame.retrofit as String
    compile majorFrame.converterGson as String
    compile majorFrame.adapterRxJava as String

    compile majorFrame.Gson as String
    compile majorFrame.Glide as String

    compile majorFrame.ButterKnife as String
    apt majorFrame.aptButterKnifeCompiler as String

    compile majorFrame.Dagger2 as String
    apt majorFrame.aptDagger2Compiler as String


    def assistance = rootProject.ext.assistance;

    debugCompile assistance.leakCanaryDebug as String
    releaseCompile assistance.leakCanaryRelease as String
    testCompile assistance.leakCanaryTest as String

    debugCompile assistance.stetho as String
    debugCompile assistance.stethoOkHttp as String


    //数据库
    compile 'de.greenrobot:greendao:2.1.0'

    //logger
    compile 'com.github.orhanobut:logger:1.12'


}
